{
  "name": "imgop",
  "version": "0.3.0",
  "description": "Image-optimisation server",
  "main": "index.js",
  "author": {
    "name": "Nathan Tran"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nthtran/imgop"
  },
  "dependencies": {
    "aws-sdk": "^2.1.18",
    "babel": "^4.4.6",
    "commander": "^2.6.0",
    "debug": "^2.1.3",
    "finished": "^1.2.2",
    "fs-lru-cache": "git://github.com/nthtran/fs-lru-cache",
    "http-errors": "^1.3.1",
    "koa": "^0.18.0",
    "koa-logger": "^1.2.2",
    "koa-onerror": "^1.2.0",
    "koa-qs": "^2.0.0",
    "koa-response-time": "^1.0.2",
    "mime-types": "^2.0.9",
    "qs": "^2.3.3",
    "sharp": "^0.9.2",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "babel-eslint": "^2.0.2",
    "co": "^4.4.0",
    "eslint": "^0.17.1",
    "image-size": "^0.3.5",
    "istanbul-harmony": "0",
    "knox": "^0.9.2",
    "mocha": "2",
    "supertest": "0"
  },
  "scripts": {
    "start": "node bin/imgop",
    "test": "mocha --bail --reporter spec",
    "test-cov": "NODE_ENV=test node ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- test/index.js",
    "lint": "eslint lib"
  },
  "bin": {
    "imgop": "./bin/imgop"
  },
  "keywords": [
    "image",
    "resize",
    "libvips",
    "optimisation",
    "server"
  ],
  "readme": "# imgop\n\nImage-optimisation server powered by `libvips`\n\n```\n/example.jpg?w=1050&h=700\n```\n\n## Requirements\n\n- `libvips`\n- `iojs`\n\n## How it works\n\n- Retrieve images from an s3 bucket\n- Cache downloaded images to the file system for subsequent renders using `fs-lru-cache`\n- Resize and adjust image quality using parameters added to the querystring\n- Use behind a CDN to cache resized images\n\n## Usage\n\n  Set the following environment variables:\n\n  ```\n  AWS_ACCESS_KEY_ID\n  AWS_SECRET_ACCESS_KEY\n  IMGOP_BUCKET // bucket to retrieve images from\n  ```\n\n  Install `imgop` and run it on your server:\n\n  ```bash\n  $ npm install -g imgop\n  $ imgop\n  ```\n\n  The available options are:\n\n  ```\n  Usage: imgop [options]\n\n  Options:\n\n    -h, --help         output usage information\n    -V, --version      output the version number\n    -p, --port <port>  Port to listen on [$PORT or 3000]\n  ```\n\n  Alternatively, you can also require `imgop` as a module which returns a `Function` that creates a `http.Server` instance.\n\n  ```js\n  require('imgop')()\n  .listen(3000);\n  ```\n\n  Modify an image by adding parameters to the querystring:\n\n  ```\n  http://localhost:3000/example.jpg?w=1050&h=700&q=75&fit=crop&fm=png\n  ```\n\n## API\n\nSimilar to [`imgix`](http://www.imgix.com/docs/reference) with only the following parameters supported.\n\n### `w`\n\nWidth.\n\n### `h`\n\nHeight.\n\n### `q`\n\nQuality. Default is `80`.\n\n### `fit`\n\nFit mode. `max` or `crop`. Default is `max`.\n\n### `fm`\n\nFormat. `jpg`, `png` or `webp`. Default is `jpg`.\n\n## Credits\n\n[sharp](https://github.com/lovell/sharp)\n\n[simgr](https://github.com/mgmtio/simgr)\n",
  "readmeFilename": "README.md",
  "gitHead": "ea20a08641d64e26ef85cc7ab58ac0a78992d2db",
  "bugs": {
    "url": "https://github.com/nthtran/imgop/issues"
  },
  "homepage": "https://github.com/nthtran/imgop",
  "_id": "imgop@0.3.0",
  "_shasum": "c4d35f42ed7c4a1003c194621523a4f212daac56",
  "_from": "imgop@>=0.3.0 <0.4.0"
}
